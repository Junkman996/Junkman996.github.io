<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>小样本学习</title>
      <link href="/2023/03/11/xiao-yang-ben-xue-xi/"/>
      <url>/2023/03/11/xiao-yang-ben-xue-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="基本概念">基本概念</h1><p>传统的监督学习要求模型来识别训练数据，并且泛化到测试数据： Meta Learning（元学习）的目标是让模型自己学会学习（learn to learn）</p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230310223100586.png" style="zoom: 67%;"></p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230310223152373.png" style="zoom:67%;"></p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230310223236855.png" style="zoom:67%;"></p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230310223250922.png" style="zoom:67%;"></p><p>k-way：support set有k个类别。 n-shot：每一类有n个样本。</p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230310223830414.png" alt="image-20230310223830414" style="zoom:67%;"></p><p>做分类任务时，预测准确率会随着类别数（ways）的增加而降低；随着shots的增加而增加。</p><h1 id="孪生网络">孪生网络</h1><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230310224953792.png" style="zoom:67%;"></p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230310225028486.png" style="zoom:67%;"></p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230310225253373.png" alt=" " style="zoom:67%;"></p><h2 id="pairwise-similarity">Pairwise Similarity</h2><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230311091049216.png" alt="" style="zoom:67%;"></p><p>使用同一个网络提取特征。</p><h2 id="triplet-loss">Triplet Loss</h2><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230311090603018.png" style="zoom:67%;"></p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230311090655381.png" alt="image-20230311090655381" style="zoom:67%;"></p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230311090819154.png" alt="image-20230311090819154" style="zoom:67%;"></p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230311090858085.png" alt="image-20230311090858085" style="zoom:67%;"></p><h1 id="预训练和微调">预训练和微调</h1><p>一种处理小样本分类的简单方法：预训练+微调，且非常有效。 在大规模训练集上做预训练，然后再support set上做预训练。</p><h2 id="preliminary">Preliminary</h2><h3 id="cosine-similarity">Cosine Similarity</h3><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230311091839139.png" alt=" " style="zoom:67%;"></p><p>投影的取值在[-1,1]。 如果向量长度不为1，需要进行内积进行归一化。</p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230311092001560.png" alt=" " style="zoom:67%;"></p><h3 id="softmax">Softmax</h3><p>Softmax经常作为分类器的输出层，如果有k个类别，Softmax的输出就是k个输出值，每个概率值是对某个类别的confidence。</p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230311092202691.png" style="zoom:67%;"></p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230311092245297.png" style="zoom:67%;"></p><h2 id="使用pretrained-cnn进行小样本分类任务">使用Pretrained CNN进行小样本分类任务</h2><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230311092412879.png" style="zoom:67%;"></p><p>可以有多种训练方法： 监督学习：训练好之后把全连接层去掉。 孪生网络：</p><p>提取Support Set的特征向量：</p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230311092715270.png" style="zoom:67%;"></p><p>将query的特征与每个类别的特征计算相似度：</p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230311092850672.png" style="zoom:67%;"></p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230311092943912.png" style="zoom:67%;"></p><p>预训练完之后，不进行微调，固定W和b，直接进行预测：</p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230311100605457.png" style="zoom:67%;"></p><h2 id="微调">微调</h2><p>做完预训练之后，可以进行微调，在support set上学习W和b，进一步提高准确率。</p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230311093257004.png" style="zoom:67%;"></p><p>support set经常比较小，包含较少样本，所以为了防止过拟合，可加上Regularization</p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230311093336325.png" style="zoom:67%;"></p><h3 id="微调的好处">微调的好处</h3><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230311093429566.png" style="zoom:67%;"></p><h3 id="技巧">技巧</h3><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230311093559878.png" style="zoom:67%;"></p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230311093725150.png" style="zoom:67%;"></p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230311093844293.png" style="zoom:67%;"></p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230311094000483.png" style="zoom:67%;"></p><h2 id="summary">Summary</h2><p>在训练集上预训练一个CNN，CNN被用来提取特征； 将support set里的图片映射成特征向量，针对每一个class，计算平均值，作为该类的表征； 进行预测时，query通过相同的CNN提取特征，将query的特征与support set中每一类的特征进行比较，query属于与其特征最相似的一类。</p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230311094033783.png" alt=" " style="zoom:67%;"></p><p>可以加入微调步骤，精度可以提高许多（2%-7%）。</p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230311094118626.png" alt=" " style="zoom:67%;"></p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小样本学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python并发编程实战</title>
      <link href="/2023/03/04/python-bing-fa-bian-cheng-shi-zhan/"/>
      <url>/2023/03/04/python-bing-fa-bian-cheng-shi-zhan/</url>
      
        <content type="html"><![CDATA[<h1 id="python并发编程介绍">Python并发编程介绍</h1><p>并发编程主要目的：提升程序运行速度</p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230304145908295.png" alt="程序提速方法" style="zoom: 80%;"></p><h2 id="python对并发编程的支持">Python对并发编程的支持</h2><p>多线程：threading，利用CPU和IO可以同时执行的原理，让CPU不会干巴巴地等待IO完成。 多进程：multiprocessing，利用多核CPU的能力，真正地并行执行任务。 异步IO：asyncio，在单线程利用CPU和IO同时执行的原理，实现函数异步执行。</p><p>Python提供的额外辅助函数： 使用Lock对资源加锁，防止冲突访问； 使用Queue实现不同线程/进程之间的数据通信，实现生产者-消费者模式； （建议使用）使用线程池Pool/进程池Pool，简化线程/进行的任务提交、等待结束、获取结果； 使用subprocess启动外部程序的进程（比如外部写好exe文件），并进行输入输出交互。</p><h1 id="怎样选择多线程多进程多协程">怎样选择多线程多进程多协程</h1><h2 id="cpu密集型计算和io密集型计算">CPU密集型计算和IO密集型计算</h2><p>CPU-bound：CPU密集型，也叫计算密集型，CPU是程序运行的瓶颈。IO在很短世家内就可以完成，CPU需要大量的计算和处理，特点是CPU占用率相当高。例如：压缩解压缩、加密解密、正则表达式搜索。</p><p>IO-bound：IO密集型，指的是系统运作大部分的状况是CPU在等IO（硬盘/内存）的读写操作，CPU占用率低。例如：文件处理程序、网络爬虫程序、读写数据库程序。</p><h2 id="多线程多进程多协程的对比">多线程、多进程、多协程的对比</h2><p>一个进程中可以启动N个线程；一个线程中可以启动N个协程。</p><p>多进程Process（multiprocessing）： 优点：可以利用多核CPU并行运算； 缺点：占用资源最多，可启动数目比线程少。 适用于：CPU密集型计算。</p><p>多线程Thread（threading）： 优点：相比进程，更加轻量级、占用资源少。 缺点： 相比进程：同时只能使用单个CPU，多线程只能并发执行，不能利用多CPU。 相比协程：启动数目有限制，占用内存资源，有线程切换开销（协程没有）。 适用于：IO密集型，且同时运行的任务数目要求不多。</p><p>多协程Coroutine（asyncio）： 优点：内存开销最少、启动协程数量最多 缺点：支持的库有限（aiohttp vs requests，平常爬虫常用requests，但是想要写多协程，只能改换aiohttp库）、代码实现复杂。 适用于：IO密集型计算、需要超多任务运行、但是有现成库支持的场景。</p><h2 id="如何选择">如何选择</h2><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230304153234103.png" alt="如何选择" style="zoom:80%;"></p><h1 id="python速度慢的原因">Python速度慢的原因</h1><p>Python速度慢的原因： （1）动态类型语言，边解释边执行； （2）GIL的存在使得Python无法利用多核CPU并发执行。</p><h2 id="gil">GIL</h2><p>全局解释器锁（Global Interpreter Lock，GIL）</p>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 多线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论文笔记_An-Image-is-Worth-16x16-Words-Transformers-for-Image-Recognition-at-Scale</title>
      <link href="/2023/03/03/lun-wen-bi-ji-an-image-is-worth-16x16-words-transformers-for-image-recognition-at-scale/"/>
      <url>/2023/03/03/lun-wen-bi-ji-an-image-is-worth-16x16-words-transformers-for-image-recognition-at-scale/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>论文笔记_Transformer-in-Transformer</title>
      <link href="/2023/03/03/lun-wen-bi-ji-transformer-in-transformer/"/>
      <url>/2023/03/03/lun-wen-bi-ji-transformer-in-transformer/</url>
      
        <content type="html"><![CDATA[<p>【Paper】https://arxiv.org/abs/2105.03247</p><p>【Code】https://github.com/megvii-research/MOTR</p><p>【Reference】https://zhuanlan.zhihu.com/p/354913120</p><h1 id="motivation">Motivation</h1><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/v2-12f7157dec309ed2e5e89ebd97ad3ed2_720w.webp" alt="ViT整体结构" style="zoom: 80%;"></p><p>ViT将图像转化为patch并进行Flatten操作后输入Transformer，因为Transformer需要的是序列（Sequence）的输入信号，而我们有的是image的2D输入信号，直接把图片分块进行Flatten操作是一种intuitive的方式，但这种方式能不能完美建模图像呢？</p><p>很明显不能，因为我们缺少每个patch的内部信息。Transformer之所以有效，是因为它能处理长度为N的输入序列中这N个输入之间的关系，而对于每个输入的内部信息，它是无能为力的，因为ViT将每个patch展平为一个向量，破坏了每个patch的内部信息。所以我们可以认为，每个输入的内部信息，即每个patch的内部信息，没有被Transformer所建模。</p><p>所以<strong>本文动机：使得Transformer既能够建模不同patch之间的关系，又能够建模每个patch内部的关系</strong>。</p><h1 id="整体结构">整体结构</h1><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230303093835252.png" alt="TNT整体结构" style="zoom: 67%;"></p><figure><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/v2-b7ac4d52e1e18b7620f3613e7b4b78d6_720w.webp" alt="TNT整体结构"><figcaption aria-hidden="true">TNT整体结构</figcaption></figure><h2 id="输入transformer之前">输入Transformer之前</h2><figure><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230303095150561.png" alt="划分patch"><figcaption aria-hidden="true">划分patch</figcaption></figure><p>首先还是将图片划分为n个patch <span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="33.091ex" height="2.565ex" role="img" focusable="false" viewBox="0 -883.9 14626.3 1133.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="58" d="M324 614Q291 576 250 573Q231 573 231 584Q231 589 232 592Q235 601 244 614T271 643T324 671T400 683H403Q462 683 481 610Q485 594 490 545T498 454L501 413Q504 413 551 442T648 509T705 561Q707 565 707 578Q707 610 682 614Q667 614 667 626Q667 641 695 662T755 683Q765 683 775 680T796 662T807 623Q807 596 792 572T713 499T530 376L505 361V356Q508 346 511 278T524 148T557 75Q569 69 580 69Q585 69 593 77Q624 108 660 110Q667 110 670 110T676 106T678 94Q668 59 624 30T510 0Q487 0 471 9T445 32T430 71T422 117T417 173Q416 183 416 188Q413 214 411 244T407 286T405 299Q403 299 344 263T223 182T154 122Q152 118 152 105Q152 69 180 69Q183 69 187 66T191 60L192 58V56Q192 41 163 21T105 0Q94 0 84 3T63 21T52 60Q52 77 56 90T85 131T155 191Q197 223 259 263T362 327T402 352L391 489Q391 492 390 505T387 526T384 547T379 568T372 586T361 602T348 611Q346 612 341 613T333 614H324Z"></path></g></g><g data-mml-node="mo" transform="translate(1084.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(2140.6,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2418.6,0)"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g><g data-mml-node="mn" transform="translate(936.2,413) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3758.3,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(4203,0)"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g><g data-mml-node="mn" transform="translate(936.2,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5542.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(5987.4,0)"><path data-c="22EF" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z"></path></g><g data-mml-node="mo" transform="translate(7326.1,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(7770.7,0)"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g><g data-mml-node="mi" transform="translate(936.2,413) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(9181.2,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g><g data-mml-node="mo" transform="translate(9737,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(10681.7,0)"><g data-mml-node="msup"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="211D" d="M17 665Q17 672 28 683H221Q415 681 439 677Q461 673 481 667T516 654T544 639T566 623T584 607T597 592T607 578T614 565T618 554L621 548Q626 530 626 497Q626 447 613 419Q578 348 473 326L455 321Q462 310 473 292T517 226T578 141T637 72T686 35Q705 30 705 16Q705 7 693 -1H510Q503 6 404 159L306 310H268V183Q270 67 271 59Q274 42 291 38Q295 37 319 35Q344 35 353 28Q362 17 353 3L346 -1H28Q16 5 16 16Q16 35 55 35Q96 38 101 52Q106 60 106 341T101 632Q95 645 55 648Q17 648 17 665ZM241 35Q238 42 237 45T235 78T233 163T233 337V621L237 635L244 648H133Q136 641 137 638T139 603T141 517T141 341Q141 131 140 89T134 37Q133 36 133 35H241ZM457 496Q457 540 449 570T425 615T400 634T377 643Q374 643 339 648Q300 648 281 635Q271 628 270 610T268 481V346H284Q327 346 375 352Q421 364 439 392T457 496ZM492 537T492 496T488 427T478 389T469 371T464 361Q464 360 465 360Q469 360 497 370Q593 400 593 495Q593 592 477 630L457 637L461 626Q474 611 488 561Q492 537 492 496ZM464 243Q411 317 410 317Q404 317 401 315Q384 315 370 312H346L526 35H619L606 50Q553 109 464 243Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(755,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mi" transform="translate(1378,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(1881,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mi" transform="translate(2659,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(3162,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(3940,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></g></g></g></svg></mjx-container></span></p><p>将这些patch当作表征图片的visual sentence，然后将每个patch分为m个sub-patch，叫做visual word。 <span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="24.047ex" height="2.565ex" role="img" focusable="false" viewBox="0 -883.9 10628.9 1133.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g><g data-mml-node="mi" transform="translate(936.2,413) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1507.9,0)"><path data-c="2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(2785.7,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(3063.7,0)"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(623,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(4512.8,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(4957.5,0)"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(623,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(6406.5,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(6851.2,0)"><path data-c="22EF" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z"></path></g><g data-mml-node="mo" transform="translate(8189.9,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(8634.5,0)"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(623,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(10350.9,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></svg></mjx-container></span> <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="3.138ex" height="1.904ex" role="img" focusable="false" viewBox="0 -830.4 1386.9 841.4"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(623,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g></g></g></svg></mjx-container></span>代表第i个visual sentence也就是<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="2.783ex" height="1.879ex" role="img" focusable="false" viewBox="0 -830.4 1230.2 830.4"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g><g data-mml-node="mi" transform="translate(936.2,363) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></g></g></svg></mjx-container></span>的第j个visual word。</p><p>将visual words转化为word embedding序列，i代表第i个sentence，每个sentence包含m个word： <span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="43.626ex" height="2.565ex" role="img" focusable="false" viewBox="0 -883.9 19282.7 1133.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D44C" d="M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z"></path></g><g data-mml-node="mi" transform="translate(855.1,413) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1426.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(2482.6,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2760.6,0)"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(523,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(623,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(4127.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(4572.4,0)"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(523,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(623,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(5939.4,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(6384.1,0)"><path data-c="22EF" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z"></path></g><g data-mml-node="mo" transform="translate(7722.8,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(8167.4,0)"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(523,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(623,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(9801.8,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g><g data-mml-node="mo" transform="translate(10079.8,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(10524.5,0)"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(523,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(623,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(12107.1,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(13162.9,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mi" transform="translate(13911.9,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mo" transform="translate(14671.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(15060.9,0)"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g><g data-mml-node="mi" transform="translate(15829.9,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(16295.9,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mo" transform="translate(16728.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(17117.9,0)"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(623,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(18504.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(18893.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span> 如下图所示，输入是一个大patch，输出的黄色大长条是patch展开以后的<strong>patch embedding</strong>，输出的彩色小长条是这个patch划分成更小的patch再展开以后的<strong>pixel embedding</strong>。</p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230303141531271.png" alt="image-20230303141531271" style="zoom:50%;"></p><p>Outer Transformer Block建模sentence embedding之间的global信息； Inner Transformer Block建模word embedding之间的local structure信息。 两种Block对应两个不同的数据流，其中Outer Block的数据流在不同patch（sentence embedding）之间运行，而Inner Block的数据流在每个patch内部运行。</p><h2 id="inner-transformer">Inner Transformer</h2><p><span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="21.165ex" height="2.392ex" role="img" focusable="false" viewBox="0 -899.7 9355.1 1057.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D44C" d="M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z"></path></g><g data-mml-node="mi" transform="translate(614,-150) scale(0.707)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g></g></g><g data-mml-node="mi" transform="translate(907.7,410.1) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1479.4,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2424.2,0)"><g data-mml-node="msup"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="211D" d="M17 665Q17 672 28 683H221Q415 681 439 677Q461 673 481 667T516 654T544 639T566 623T584 607T597 592T607 578T614 565T618 554L621 548Q626 530 626 497Q626 447 613 419Q578 348 473 326L455 321Q462 310 473 292T517 226T578 141T637 72T686 35Q705 30 705 16Q705 7 693 -1H510Q503 6 404 159L306 310H268V183Q270 67 271 59Q274 42 291 38Q295 37 319 35Q344 35 353 28Q362 17 353 3L346 -1H28Q16 5 16 16Q16 35 55 35Q96 38 101 52Q106 60 106 341T101 632Q95 645 55 648Q17 648 17 665ZM241 35Q238 42 237 45T235 78T233 163T233 337V621L237 635L244 648H133Q136 641 137 638T139 603T141 517T141 341Q141 131 140 89T134 37Q133 36 133 35H241ZM457 496Q457 540 449 570T425 615T400 634T377 643Q374 643 339 648Q300 648 281 635Q271 628 270 610T268 481V346H284Q327 346 375 352Q421 364 439 392T457 496ZM492 537T492 496T488 427T478 389T469 371T464 361Q464 360 465 360Q469 360 497 370Q593 400 593 495Q593 592 477 630L457 637L461 626Q474 611 488 561Q492 537 492 496ZM464 243Q411 317 410 317Q404 317 401 315Q384 315 370 312H346L526 35H619L606 50Q553 109 464 243Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(755,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(536,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(780.5,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="msup" transform="translate(1558.5,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(536,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(2338.9,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mi" transform="translate(3116.9,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(6017.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(7072.9,0)"><g data-mml-node="msup"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="211D" d="M17 665Q17 672 28 683H221Q415 681 439 677Q461 673 481 667T516 654T544 639T566 623T584 607T597 592T607 578T614 565T618 554L621 548Q626 530 626 497Q626 447 613 419Q578 348 473 326L455 321Q462 310 473 292T517 226T578 141T637 72T686 35Q705 30 705 16Q705 7 693 -1H510Q503 6 404 159L306 310H268V183Q270 67 271 59Q274 42 291 38Q295 37 319 35Q344 35 353 28Q362 17 353 3L346 -1H28Q16 5 16 16Q16 35 55 35Q96 38 101 52Q106 60 106 341T101 632Q95 645 55 648Q17 648 17 665ZM241 35Q238 42 237 45T235 78T233 163T233 337V621L237 635L244 648H133Q136 641 137 638T139 603T141 517T141 341Q141 131 140 89T134 37Q133 36 133 35H241ZM457 496Q457 540 449 570T425 615T400 634T377 643Q374 643 339 648Q300 648 281 635Q271 628 270 610T268 481V346H284Q327 346 375 352Q421 364 439 392T457 496ZM492 537T492 496T488 427T478 389T469 371T464 361Q464 360 465 360Q469 360 497 370Q593 400 593 495Q593 592 477 630L457 637L461 626Q474 611 488 561Q492 537 492 496ZM464 243Q411 317 410 317Q404 317 401 315Q384 315 370 312H346L526 35H619L606 50Q553 109 464 243Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(755,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(878,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mi" transform="translate(1656,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g></g></g></g><g data-mml-node="mspace" transform="translate(9355.1,0)"></g></g></g></svg></mjx-container></span>第i个sentence在第l层的pixel embedding，将这个值传入Inner Transformer：</p><figure><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230303145446227.png" alt="Inner Transformer处理pixel embedding"><figcaption aria-hidden="true">Inner Transformer处理pixel embedding</figcaption></figure><p>Inner Transformer第l个layer的输出：</p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230303145859707.png"></p><h2 id="outer-transformer">Outer Transformer</h2><p>Outer Transformer的表达式：</p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230303145946072.png"></p><p>Outer Transformer的第l个layer的输出：</p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230303150033207.png"></p><h2 id="融合global和local信息">融合global和local信息</h2><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230303150130281.png"></p>]]></content>
      
      
      <categories>
          
          <category> 论文笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Transformer </tag>
            
            <tag> TNT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论文笔记_MOTR-End-to-End-Multiple-Object-Tracking-with-Transformer</title>
      <link href="/2023/03/02/lun-wen-bi-ji-motr-end-to-end-multiple-object-tracking-with-transformer/"/>
      <url>/2023/03/02/lun-wen-bi-ji-motr-end-to-end-multiple-object-tracking-with-transformer/</url>
      
        <content type="html"><![CDATA[<p>【ECCV2022】 - MOTR：使用Transformer进行端到端的多目标追踪</p><p>【Paper】<a href="https://arxiv.org/abs/2105.03247">https://arxiv.org/abs/2105.03247</a></p><p>【Code】<a href="https://github.com/megvii-research/MOTR">https://github.com/megvii-research/MOTR</a></p><h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>​        在多目标追踪中，对象/目标的时序建模是一项关键性挑战。现有方法通过基于运动的和基于外观的相似度来进行检测结果的关联，从而实现跟踪；而这种关联的后处理特性，使得其不能够端到端地利用视频序列的时序变量。</p><p>​        基于此，作者提出MOTR。MOTR对DETR进行扩展，并引入track query</p>]]></content>
      
      
      <categories>
          
          <category> 论文笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 多目标跟踪 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>河工大Pytorch深度学习实践</title>
      <link href="/2023/03/02/he-gong-da-pytorch-shen-du-xue-xi-shi-jian/"/>
      <url>/2023/03/02/he-gong-da-pytorch-shen-du-xue-xi-shi-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h1><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230301101130351.png" alt="image-20230301101130351" style="zoom:67%;"><h1 id="线性模型"><a href="#线性模型" class="headerlink" title="线性模型"></a>线性模型</h1><p>可视化问题：可视化训练过程的工具：Visdom</p><p>断点问题：为了应对训练过程中程序崩溃，需要在训练时对模型进行持久化（定期存盘）。</p><p>绘制曲面图形：可以尝试np.meshgrid()</p><h1 id="梯度下降算法"><a href="#梯度下降算法" class="headerlink" title="梯度下降算法"></a>梯度下降算法</h1><p>随机梯度下降：每次计算的不再是总损失，而是随机选取一个样本计算损失。<br>随机梯度下降，引入随机性，有可能跨过鞍点。</p><p>梯度下降时间复杂度低，但是性能也低；随机梯度下降性能高，但是时间复杂度也高。<br>梯度下降和随机梯度下降的这种：Mini-Batch，批量随机梯度下降，选取一个Batch的样本计算损失。</p><h1 id="反向传播"><a href="#反向传播" class="headerlink" title="反向传播"></a>反向传播</h1><p>《matrix-cook-book》：矩阵计算公式书 </p><p>Pytorch是动态计算图，进行backward之后将计算结果保存之后，计算图会被释放 ，下次forward再重新建立。<br><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230301133845424.png" alt="image-20230301133845424" style="zoom:33%;"><br><code>w.data = w.data - 0.01 * w.grad.data</code>，只是为了修改w的数值，取张量的data进行计算是不会建立计算图的。<br>张量的grad是一个张量，直接使用w.grad会建立计算图。<br><code>w.grad.item()</code>是直接将梯度取出当作Python里的标量。<br><code>w.grad.data.zero_()</code>经过backward()计算的梯度会被累积，更新梯度后记得将grad清零</p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230301135019625.png" alt="image-20230301135019625" style="zoom: 33%;"><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230301135052371.png" alt="image-20230301135052371" style="zoom: 33%;"><h1 id="用Pytorch实现线性回归"><a href="#用Pytorch实现线性回归" class="headerlink" title="用Pytorch实现线性回归"></a>用Pytorch实现线性回归</h1><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230301140354890.png" alt="image-20230301140354890" style="zoom:50%;"><p>所有的模型类均需要继承nn.Module，它是所有神经网络组件的基类。<br>必须要实现构造函数和forward函数；backward不用写，nn.Module会自动实现。</p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230301141518808.png" alt="image-20230301141518808" style="zoom:33%;"><p>model.parameters()会检查model的所有成员，如果有权重，会把它们加入到需要训练的参数集合中。</p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230301142212365.png" alt="image-20230301142212365" style="zoom: 50%;"><h1 id="逻辑斯谛回归"><a href="#逻辑斯谛回归" class="headerlink" title="逻辑斯谛回归"></a>逻辑斯谛回归</h1>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pytorch </tag>
            
            <tag> 深度学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑马程序员Linux</title>
      <link href="/2023/03/02/hei-ma-cheng-xu-yuan-linux/"/>
      <url>/2023/03/02/hei-ma-cheng-xu-yuan-linux/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章-初识linux">第一章 初识Linux</h1><h2 id="导学">导学</h2><p>个人桌面操作系统：Windows和macOS相互竞争；而服务器操作系统只有Linux</p><h2 id="linux初识">Linux初识</h2><h3 id="linux内核">Linux内核</h3><p>Linux系统两部分组成：Linux系统内核和系统级应用程序。 内核提供系统最核心的功能，如：调度CPU、调度内存、调度文件系统、调度网络通讯、调度IO等。系统级应用程序，可以理解为出场自带程序，可供用户快速上手操作系统，如：文件管理器、任务管理器、音乐播放等。</p><figure><img src="http://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230228141126994.png" alt="image-20230228141126994"><figcaption aria-hidden="true">image-20230228141126994</figcaption></figure><p>内核是Linux最核心的存在，系统级应用程序只是锦上添花。 Linux内核是免费开源的，任何人都可以下载内核源码查看并修改。</p><h3 id="linux发行版">Linux发行版</h3><p>任何人都可以获得并修改内核，并且自行集成系统级程序，提供了内核+系统级程序的完整封装，称之为Linux发行版。 内核无法被用户直接使用，需要配合应用程序才能被用户使用。 在内核之上，封装系统级应用程序，组合在一起称之为Linux发行版。</p><figure><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230228152430279.png" alt="image-20230228152430279"><figcaption aria-hidden="true">image-20230228152430279</figcaption></figure><figure><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230228152639147.png" alt="image-20230228152639147"><figcaption aria-hidden="true">image-20230228152639147</figcaption></figure><p>不同发行版的基础命令是100%相同的。</p><h3 id="虚拟机">虚拟机</h3><p>虚拟机=操作系统（软件）+虚拟硬件。 借助虚拟化技术，我们可以在系统中，通过软件，模拟计算机硬件，并给虚拟硬件安装真实的操作系统。</p><h3 id="虚拟化软件">虚拟化软件</h3><p>虚拟化技术可以模拟出计算机硬件，有专门的虚拟化软件可以提供虚拟化技术。 VMware WorkStation</p><h2 id="win10的wsl">Win10的WSL</h2><p>WSL：Windows Subsystem for Linux，是用于Windows系统之上的Linux子系统。 作用：可以在WIndows系统中获得Linux系统环境，并完全直连计算机硬件，无需通过虚拟机虚拟硬件。</p><figure><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230306093219989.png" alt="WSL"><figcaption aria-hidden="true">WSL</figcaption></figure><p>简而言之：Windows10的WSL功能，可以无需单独虚拟一套硬件设备，就可以直接使用主机的物理硬件，构建Linux操作系统，并不影响Windows系统本身的运行。</p><h2 id="虚拟机快照">虚拟机快照</h2><p>VMware虚拟机支持为虚拟机制作快照。 通过快照将当前虚拟机的状态保存下来，在以后可以通过快照恢复虚拟机到保存状态。</p><h1 id="第二章-linux基础命令">第二章 Linux基础命令</h1><h2 id="linux目录结构">Linux目录结构</h2><figure><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230306094900819.png" alt="目录结构"><figcaption aria-hidden="true">目录结构</figcaption></figure><p>Linux的目录结构是一个树形结构； Windows系统可以拥有多个盘符，如C盘、D盘、E盘，但是Linux没有盘符这个概念，只有一个根目录/，所有文件都在它下面。</p><p>路径描述： Linux中，路径之间的层级关系使用/表示；D:.txt中'D:'表示D盘，'\'表示层级关系。 WIndows中路径的层级关系用；/usr/local/hello.txt中开头的/表示根目录，后面的/表示层级关系。</p><h2 id="相对路径绝对路径和特殊路径符">相对路径绝对路径和特殊路径符</h2><p>绝对路径：以根目录为起点，路径描述以/开头 相对路径：以当前目录为起点，路径描述无需/开头</p><p>特殊路经符： .表示当前目录； ..表示上一级目录； ~表示HOME目录。</p><h2 id="linux命令">Linux命令</h2><p>命令即Linux程序；一个命令就是一个Linux程序。</p><figure><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230306100025452.png" alt="Linux命令基础格式"><figcaption aria-hidden="true">Linux命令基础格式</figcaption></figure><h3 id="ls命令">ls命令</h3><p>不适用选项和参数，直接使用ls命令本体时，表示：以平铺形式，列出当前工作目录下的内容。</p><p>注：Linux系统的命令行终端，在启动的时候，默认会加载：当前登录用户的HOME目录作为当前工作目录； HOME目录：每个Linux操作用户在Linux系统的个人账户目录，路径在：/home/用户名。 Windows和Linux均设有用户的HOME目录：</p><figure><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230306100931770.png" alt="Windows和Linux的HOME目录"><figcaption aria-hidden="true">Windows和Linux的HOME目录</figcaption></figure><p>-a选项：all，列出所有文件（包括隐藏的文件/文件夹）； .开头的表示Linux系统的隐藏文件/文件夹 -l选项：以列表（竖向排列）的形式展示内容，并显示更多信息；</p><p>ls命令选项的组合使用 语法中的选项可以组合使用，比如： ls -l -a、ls -la和ls -al实现功能一样。</p><h3 id="cd切换工作目录">cd切换工作目录</h3><p>cd：change directory</p><p>cd命令无需选项，只有参数，表示要切换到哪个目录下； cd命令直接执行，不写参数，表示回到用户的HOME目录。</p><h3 id="pwd查看当前工作目录">pwd查看当前工作目录</h3><p>pwd：print work directory</p><p>pwd无选项无参数</p><h3 id="mkdir创建文件夹">mkdir创建文件夹</h3><p>语法：mkdir [-p] Linux路径 参数必填，表示Linux路径，即要创建的文件夹的路径； -p选项可选，表示自动创建不存在的父目录，适用于创建连续多层级的目录。</p><p>注：创建文件夹需要修改权限，请确保操作均在HOME目录内，不要再HOME外操作；</p><h3 id="touch创建文件">touch创建文件</h3><p>语法：touch Linux路径 无选项，参数必填，表示要创建的文件路径</p><h3 id="catmore查看文件内容">cat/more查看文件内容</h3><p>语法：cat Linux路径</p><p>more在查看的过程中，可以通过空格翻页，通过q退出查看。</p><h3 id="cp命令复制文件文件夹">cp命令复制文件文件夹</h3><p>语法：cp [-r] 参数1 参数2 -r选项，可选，用于复制文件夹使用，表示递归 参数1，Linux路径，表示被复制的文件或文件夹； 参数2，Linux路径，表示要复制去的地方。</p><h3 id="mv移动文件或文件夹">mv移动文件或文件夹</h3><p>语法：mv 参数1 参数2</p><p>参数1，Linux路径，表示被移动的文件或文件夹； 参数2，Linux路径，表示要移动去的地方，如果目标不存在，则进行改名，确保目标存在。</p><h3 id="rm删除文件文件夹">rm删除文件、文件夹</h3><p>语法：rm [-r -f] 参数1 参数2 …… 参数N</p><p>同cp命令一样，-r选项用于删除文件夹 -f表示force，强制删除（不会弹出提示确认信息）；普通用户删除内容不会弹出提示，只有root管理员用户删除内容会有提示，所以一般普通用户用不到-f选项。</p><p>支持通配符，用来做模糊匹配 符号*表示通配符，即匹配任意内容（包含空），示例： test*表示匹配任何以test开头的内容； *test表示匹配任何以test结尾的内容； *test*表示匹配任何包含test的内容。</p><h3 id="which按名查找命令">which按名查找命令</h3><p>语法：which 命令名</p><p>Linux命令的本体就是一个个可执行的二进制程序，和Windows中的.exe文件一个意思。 我们可以通过which命令，查看所使用的一系列命令的程序文件放在哪里。</p><h3 id="find">find</h3><h4 id="按名查找文件">按名查找文件</h4><p>语法：find 起始路径 -name “被查找文件名” 支持通配符</p><h4 id="按文件大小查找">按文件大小查找</h4><p>语法：find 起始路径 -size +|-n[kMG]</p><p>+、-表示大于和小于；n表示大小数字；kMG表示大小单位，小写k表示kb，M和G分别代表MB和GB。 示例：查找小于10KB的文件：find / -size -10k</p><h3 id="grep过滤文件行">grep过滤文件行</h3><p>语法：grep [-n] 关键字 文件路径 选项-n，可选，表示在结果中显示匹配的行的行号； 参数，关键字，必填，表示过滤的关键字，如果带有空格或其他特殊符号，建议使用“”将关键字包围起来； 参数，文件路径，必填，表示要过滤内容的文件路径，<strong>可作为内容输入端口</strong>。</p><h3 id="wc数量统计">wc数量统计</h3><p>统计文件的行数、单词数量。 语法：wc [-c -m -l -w] 文件路径 -c统计bytes数；-m统计字符数；-l统计行数；-w统计单词数。 参数，文件路径，被统计的文件，<strong>可作为内容输入端口</strong>。</p><h3 id="管道符">管道符</h3><p>特殊符号管道符：| 含义：将管道符左边命令的结果，作为右边命令的输入</p><p>例：cat itheima.txt | grep itheima 将itheima.txt的输出结果（文件内容）作为右边grep命令的输入（被过滤文件）。 ls | grep test：列出名字包含test的文件。 cat test.txt | wc -l：统计test.txt有多少行。 ls -l | wc -l：统计当前目录下有多少个文件。</p><p>管道符可以嵌套。</p><h3 id="echo打印输出">echo打印输出</h3><p>可以使用echo在命令行输出指定内容。</p><p>语法：echo 输出内容 无需选项，只有一个参数，表示要输出的内容，复杂内容可以用“”包围。</p><p>带有空格或，建议使用双引号包围，不包围的话空格后很容易被识别为参数2，尽管echo不受影响，但要养成好习惯。</p><h4 id="反引号">反引号</h4><p>被反引号包围的内容，会被当做命令执行，而非普通字符。</p><p>echo pwd会打印pwd。 echo `pwd` 会打印当前目录。</p><h3 id="重定向符">重定向符</h3><p>&gt;，将左侧命令的结果，覆盖写入到符号右侧指定的文件中。 &gt;&gt;，将左侧命令的结果，追加写入到符号右侧制定的文件中。</p><p>echo "hello" &gt; test.txt echo "world" &gt;&gt; test.txt</p><p>最后test.txt里包含两行内容，分别是hello和world。</p><h3 id="tail">tail</h3><p>使用tail可以查看文件尾部内容，跟踪文件的最新更改 语法：tail [-f -num] Linux路径 参数，Linux路径，表示被跟踪文件的路径 选项-f表示持续跟踪 选项-num表示查看尾部多少行，默认10行。</p><h2 id="vi">vi</h2><p>viinterface的简称，是Linux中最经典的文本编辑器。</p><p>vim是vi的加强版本，兼容vi的所有指令，不仅能编辑文本，还具有shell程序编辑的功能，可以不同颜色的字体来辨别语法的正确性，极大方便了程序的设计额编辑性。</p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230310163903887.png"></p><p>三种工作模式： 命令模式： 所敲的按键均被编辑器理解为命令，以命令驱动执行不同的功能。此模式下，不能自由进行文本编辑。 输入模式： 也就是编辑模式、插入模式，此模式下可对文件内容进行自由编辑。 底线命令模式： 以：开始，通常用于文件的保存、退出。</p><p>命令模式下，通过命令： vim 文件路径 如果文件路径表示的文件不存在，那么命令会用于编辑新文件；如果存在，此命令用于编辑已有文件。</p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230310164705913.png"></p><figure><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230310165019102.png" alt="image-20230310165019102"><figcaption aria-hidden="true">image-20230310165019102</figcaption></figure><h1 id="第三章-linux用户和权限">第三章 Linux用户和权限</h1><h2 id="root用户和普通用户">root用户和普通用户</h2><p>root用户拥有最大的系统操作权限，而普通用户在许多地方的权限是受限的。 普通用户的权限，一般在其HOME目录内是不受限的； 一旦出了HOME目录，大多数地方，普通用户仅有只读和执行权限，无修改权限。</p><h3 id="su和exit命令">su和exit命令</h3><p>su命令就是用于账户切换的系统命令，Switch User。</p><p>语法：su [-] [用户名] -符号可选，表示是否在切换用户后加载环境变量，建议加上； 参数，用户名，表示要切换的用户，省略代表切换到root； 切换用户后，可以通过exit退出上一个用户，也可以使用快捷键ctrl+d。</p><p>使用普通用户，切换到其他用户需要输入密码，如切换到root； 使用root用户切换到其他用户，无需密码，直接切换。</p><h3 id="sudo命令">sudo命令</h3><p>我们知道root用户的密码时，可以通过su命令切换到root获得最大权限。但是不建议长期使用root用户，避免带来系统损坏。 可以使用sudo命令，为普通命令授权，临时以root身份运行。</p><p>语法：sudo 其他命令 在其他命令之前，带上sudo，即可为这一条命令临时赋予root授权。 但并不是所有用户都有权使用sudo，我们需要为普通用户配置sudo认证。</p><h3 id="为普通用户配置sudo认证">为普通用户配置sudo认证</h3><p>切换到root用户，执行visudo命令，会自动通过vi编辑器打开：/etc/sudoers 在文件最后加上：itheima ALL=(ALL) NOPASSWORD:ALL 其中的NOPASSWORD:ALL表示使用sudo命令无需输入密码。 最后通过wq保存。</p><h2 id="用户与用户组">用户与用户组</h2><p>Linux系统中可以配置多个用户，配置多个用户组，用户可以加入多个用户组中。</p><p>Linux中关于权限的管控级别有2个级别，分别是： 针对用户的权限控制；针对用户组的权限控制。</p><h4 id="用户组管理">用户组管理</h4><p>需要root用户执行 创建用户组：groupadd 用户组名 删除用户组：groupdel 用户组名</p><h4 id="用户管理">用户管理</h4><p>需要root用户执行</p><p>创建用户：useradd [-g -d] 用户名 选项-g：指定用户的组，不指定-g，会创建同名组并自动加入，指定-g需要组已经存在，如已存在同名组，必须使用-g。 选项-d：指定用户HOME路径，不指定，HOME目录默认在：/home/用户名。</p><p>删除用户：userdel [-r] 用户名 选项-r：删除用户的HOME目录，不使用-r，删除用户时，HOME目录保留。</p><p>查看用户所属组： id [用户名] 参数：用户名，被查看的用户，如果不提供则查看自身。</p><p>修改用户所属组：usermod -aG 用户组 用户名 将指定用户加入指定用户组。</p><h4 id="getent">getent</h4><p>使用getent命令，可以查看当前系统中有哪些用户。 语法：getent passwd 打印的信息有七份： 用户名:密码(x):用户ID:组ID:描述信息(无用):HOME目录:执行终端(默认bash)</p><p>使用getent也可以查看系统中有哪些用户组。 语法：getent group 包含三分信息： 组名称:组认证(显示为x):组ID</p><h2 id="查看权限控制">查看权限控制</h2><figure><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230310184600483.png" alt="image-20230310184600483"><figcaption aria-hidden="true">image-20230310184600483</figcaption></figure><figure><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230310184839761.png" alt="image-20230310184839761"><figcaption aria-hidden="true">image-20230310184839761</figcaption></figure><h3 id="chmod命令修改权限">chmod命令修改权限</h3><p>可以使用chmod修改文件、文件夹的权限信息。 注意：只有文件、文件夹的所属用户或root用户可以修改。 语法：chmod [-R] 权限 文件或文件夹 选项-R：对文件夹内的全部内容应用同样的操作。</p><figure><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230310185917786.png" alt="image-20230310185917786"><figcaption aria-hidden="true">image-20230310185917786</figcaption></figure><h3 id="chown命令修改所属用户用户组">chown命令修改所属用户/用户组</h3><p>shown命令可以修改文件、文件夹的所属用户和用户组 普通用户无法修改所属为其他用户或组，所以此命令只适用于root用户执行。 语法：chown -R [用户] [:] [用户组] 文件或文件夹 选项-R，同chmod，对文件夹内全部内容应用相同规则； 选项，用户，修改所属用户； 选项，用户组，修改所属用户组； :用于分割用户和用户组。</p><h1 id="第四章-linux实用操作">第四章 Linux实用操作</h1><h2 id="各类小技巧快捷键">各类小技巧（快捷键）</h2><h3 id="ctrlc强制停止">ctrl+c强制停止</h3><h3 id="ctrld退出或登出">ctrl+d退出或登出</h3><p>可以退出账户的登录（由root用户退出到普通用户）； 可以退出某些特定程序的专属页面（退出python）； 不能用于退出vi/vim。</p><h3 id="history">history</h3><p>查看历史输入过的全部命令。</p><p>可以结合grep筛选。</p><p>匹配近期命令：可以通过!+命令前缀，自动执行上一次匹配前缀的</p><p>匹配较远命令：ctrl+r，输入内容可进行匹配。 如果搜到的内容是你想要的，回车键可以直接执行；键盘左右键可以得到此命令（不执行）。</p><h3 id="光标移动快捷键">光标移动快捷键</h3><p>ctrl+a，跳到命令开头 ctrl+e，跳到命令结尾 ctrl+键盘左键，向左跳一个单词 ctrl+键盘右键，向右跳一个单词</p><h3 id="清屏">清屏</h3><p>clear命令或ctrl+l</p><h2 id="软件安装">软件安装</h2><p>前面学的各类Linux命令是通用的，但是软件安装，CentOS和Ubuntu使用不同的包管理器。 yum语法：yum [-y] [install | remove | search] 软件名称 apt语法：apt[-y] [install | remove | search] 软件名称</p><h3 id="yum命令">yum命令</h3><p>windows安装包是.exe；Mac是.pkg； CentOS是.rpm，可用yum管理。 Ubuntu是.deb，可用apt管理。</p><p>yum：RPM包软件管理器，用于自动化安装配置Linux软件，并可以自动解决依赖问题。 yum语法：yum [-y] [install | remove | search] 软件名称 -y选项：自动确认，无需手动确认安装或卸载过程 install安装 remove卸载 search搜索</p><p>yum命令需要root权限；yum命令需要联网。</p><h2 id="systemctl">systemctl</h2><p>Linux系统有许多软件（内置或第三方）均支持使用systemctl命令控制：启动、停止、开机自启。 能够被systemctl管理的软件，一般也称为服务。 语法：systemctl start|stop|status|enable|disable 服务名 start启动，stop关闭，status查看状态，enable开启开机自启，disable关闭开机自启。</p><h2 id="软链接">软链接</h2><p>在系统中创建软链接，可以将文件、文件夹链接到其他位置。类似Windows中的快捷方式。</p><p>语法：ln -s 参数1 参数2 -s选项，创建软链接 参数1：被链接的文件或文件夹 参数2：要链接取得目的地</p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230310220531838.png"></p><h2 id="日期和时间">日期和时间</h2>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python积累</title>
      <link href="/2023/03/02/python-ji-lei/"/>
      <url>/2023/03/02/python-ji-lei/</url>
      
        <content type="html"><![CDATA[<ol type="1"><li><p>（LeetCode1两数之和）使用一个整数区间控制for循环：<code>for i in range(m, n)</code></p></li><li><p>（LeetCode1）enumerate()函数用于将一个可遍历的数据对象组合为一个索引序列，同时列出数据下标和数据，且可以t通过start参数指定下标从几开始，一般用于for循环中。 现有列表list = [7, 8, 9]，<code>for num, i in enumerate(list, [start=0])</code> ，其遍历结果为 <code>（0,7）， （1,8）， （2，9）</code></p></li><li><p>（LeetCode1）dict()用于创建一个字典，有三种创建方式：关键字、可迭代对象、映射。 关键字：<code>nums = dict(x=0, y=1)</code> 可迭代对象：<code>nums = dict([('x', 0), ('y', 1)])</code> 映射：<code>nums = {'x':0, 'y':1}    nums = dict({'x':0, 'y':1})</code></p></li><li><p>（LeetCode1）判断字典里是否包含某个key：Python3不支持has_key()了，使用in或not in；<code>if i in hashkey：</code>。</p></li><li><p>（LeetCode9回文数）Python中的短除法是//</p></li><li><p>（LeetCode14最长公共前缀）Python不支持自增语法（++）。</p></li><li><p>（LeetCode20有效的括号）list()用于创建一个栈</p></li><li><p>Python==代码规范== （1）命名规范 模块命名：模块尽量使用小写命名，首字母保持小写，尽量不用下划线（除非多个单词，且数量不多的情况下）。 类命名：大驼峰；私有类可用一个下划线开头。 函数命名：一律小写，如有多个单词，用下划线分开。 类内私有函数命名：用双下划线开头，该函数不可被继承访问。 变量命名：尽量小写，如有多个单词，可用下划线分开；类内私有变量用双下划线开头，该变量不可被继承访问；常量全大写，如有多个单词，用下划线分类 （2）代码规范 空一行：类成员函数之间，或者用于区分不同逻辑块。 空两行：类与类、类与函数，函数与函数之间。 换行：反斜杠</p></li><li><p>列表推导式<code>nums = [i for i in range(1, 11)]</code></p></li><li><p>字典推导式<code>d1={'a':10, 'b':34}  d2={v:k for k,v in d1.items()}  #key和value互换</code> <code>d3={k.upper():v for k, v in d1.items()}</code></p></li><li><p>格式化输出：<code>name="han"  print("na name is %s" %name)</code><br>format()格式化字符串<code>print('{0},{1}'.format('laowang', 20))  #1. 通过位置</code> <code>print('{name}, {age}'.format(age=18, name="han")) #2. 通过关键字参数</code> <code>a=['han', 20]   print('my name is {0[0]}, age is {0[1]}'.format(a))    #3. 通过映射list</code> <code>b={'name': 'han', 'age': 18}    print('my name is {name}, age is {age}'.format(**b)) #4.1 解包</code> <code>print('my name is {info['name']}, age is {info['age']}'.format(info=b))  #4.2  字典映射</code> format还可以用来实现填充与对齐。</p></li><li><p>二分查找 （1）当搜索区间[left…right]只有两个元素时： · 如果划分区间的逻辑是<code>left=mid+1</code>和<code>right=mid</code>时，<code>while(left&lt;right)</code>退出循环后<code>left==right</code>成立，此时mid正常下取整就行； · 如果划分区间的逻辑是<code>left=mid</code>和<code>right=mid-1</code>时，<code>while(left&lt;right)</code>退出循环后left==right成立，此时为了避免死循环，mid应该上取整。 （2</p></li><li><p>拆包：快速提取数据的一种方式</p><ol type="1"><li><code>num1, num2, num3 = [1,2,3] #对列表拆包，有序的</code> 对集合拆包，结果是无序的 对字典拆包，默认取到的是key，且无序；当然也可以实现取value或者key-value对</li></ol><p>(2)函数返回值拆包 <code>high, weight, age = get_my_info()</code> (3)通过*和**拆包</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">test</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token operator">+</span>b<span class="token operator">+</span>c<span class="token punctuation">)</span>nums<span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>test<span class="token punctuation">(</span>nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#不简洁</span>test<span class="token punctuation">(</span><span class="token operator">*</span>nums<span class="token punctuation">)</span><span class="token comment">#单*可以跟列表、元组、集合</span><span class="token keyword">def</span> <span class="token function">test</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> web_site<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>web_site<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span>info <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"韩"</span><span class="token punctuation">,</span>    <span class="token string">"web_site"</span><span class="token punctuation">:</span> <span class="token string">"www.baidu.com"</span><span class="token punctuation">,</span>    <span class="token string">"age"</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">}</span>test<span class="token punctuation">(</span><span class="token operator">**</span>info<span class="token punctuation">)</span><span class="token comment">#拆包的结果是命名参数</span><span class="token comment"># 更改函数形参名，还需要更改字典的key，故不推荐</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>(4)星号拆包和不定长参数搭配使用</p><figure><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230228091110328.png" alt="image-20230228091110328"><figcaption aria-hidden="true">image-20230228091110328</figcaption></figure><ol start="5" type="1"><li></li></ol></li><li><p>不定长参数 *args：表示调用函数时多余的<strong>未命名</strong>参数都以元组形式存储到args中；</p><p>**kwargs：表示调用函数时多余的<strong>命名</strong>参数都会以键值对形式存储到kwargs中。</p></li><li><p>匿名函数</p><p>默认自带return，适合书写具有简短代码的函数 （1）</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">my_test_func <span class="token operator">=</span> <span class="token keyword">lambda</span> a<span class="token punctuation">,</span> b<span class="token punctuation">:</span> a<span class="token operator">+</span>b <span class="token comment">#先定义变量指向匿名函数</span>num <span class="token operator">=</span> my_test_func<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>（2）匿名函数可以做实参</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">fun</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> opt<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>opt<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span>fun<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> x<span class="token punctuation">,</span>y<span class="token punctuation">:</span> x<span class="token operator">+</span>y<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>（3）</p><pre class="line-numbers language-py" data-language="py"><code class="language-py"><span class="token comment">#字典排序</span>stus <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"wanglaoshi"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"wanghanshu"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">19</span><span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"hanshuyao1"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token comment">#不使用匿名函数</span><span class="token keyword">def</span> <span class="token function">sort_by_age</span><span class="token punctuation">(</span>temp_dict<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> temp_dict<span class="token punctuation">[</span><span class="token string">"age"</span><span class="token punctuation">]</span>stus<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>key<span class="token operator">=</span>sort_by_age<span class="token punctuation">)</span><span class="token comment">#按age排序</span><span class="token comment">#使用匿名函数</span>stus<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>key<span class="token operator">=</span><span class="token keyword">lambda</span> temp_dict<span class="token punctuation">:</span> temp_dict<span class="token punctuation">[</span><span class="token string">"age"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>面向对象 （1）定义类 定义类有两种方式：新式类和经典类，个人感觉只记住一个吧；</p><p>object是Python里所有类的最顶级父类；</p><p>类名使用大驼峰命名规则；</p><p>实例方法的第一个参数一般是self，表示实例对象本身，当然也可以将self换为其他名字，其作用是一个变量，这个变量指向了实例变量。 （2）实例方法和实例属性 我们把创建出来的对象成为实例对象，简称对象；所以实例属性就是这个对象的属性； 实例方法的定义方法和普通函数类似，唯一区别在于形参中第一个参数是self；通过对象名,方法名()调用。 （3）私有属性/方法 python中的私有都是假的，只不过不能通过对象名.变量名进行访问。（只是进行了重命名） 将__属性名改成了_类名__属性名。 （4）__str__() 打印某个实例对象时，自定义打印信息，不然会打印object。 （5）super 如果父类中的方法在派生的子类中不能满足其需求的话，可以在子类中通过重写解决这个问题，但是很多情况下，父类中的方法并不是全部一点不能用，即子类的需求往往是在父类方法实现的功能基础上提出了更多的需求，此时如果我们在子类中重写此方法时就会出现很多冗余代码。解决：在子类重写的方法中通过调用父类中被重写的方法（super）。 （6）静态方法 如果一个方法不写self即不需要实例对象的引用，此时在定义方法的时候可以用@staticmethod对函数进行修饰，被修饰的函数可以不写self。 如果不需要对象，那么就可以讲方法用@staticmethod进行修饰，如此一来此方法就变成了静态方法。 可以通过实例对象.静态方法()或者类名.静态方法()方式调用；实例方法只能通过实例对象方法。 （7）类属性 在class内且在def之外定义的变量 （8）类方法 使用@classmethod进行修饰，且第一个形参为cls。</p><ol start="17" type="1"><li>容器 Python中，可包含其他对象的对象，称之为容器，容器是一种数据结构。 常用的容器主要分为两种：序列（列表、元组等）和映射（字典）。序列中，每个元素都有名称，他们是有序的。映射中，每个元素都有名称（又称“键”），他们是无序的。 除序列和映射之外，还有一种需要注意的容器——集合</li><li></li></ol></li></ol>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyQt5积累</title>
      <link href="/2023/03/02/pyqt5-ji-lei/"/>
      <url>/2023/03/02/pyqt5-ji-lei/</url>
      
        <content type="html"><![CDATA[<ol><li><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20230216162410242.png" alt="image-20230216162410242"><br><code>app=QApplication(sys.argv)</code>Qt制作的每个程序有且仅有一个QApplication；sys.argv当做参数的目的是将运行时的命令参数传递给QApplication对象。<br><code>app.exec_()</code>程序进入循环等待状态，一定要写，不然一闪而过。</p></li><li><p>窗口内的所有控件，若想在窗口中显示，都需要表示它的父亲是谁，而不是直接调用show函数。<br>可以在控件被创建的同时指定父亲（parent参数）；也可以在创建控件之后再指定（setParent函数）</p></li><li><p>PyQt5的自定义信号必须在类属性的位置去定义，不能放在实例方法内。</p></li><li><p>QMessageBox控件中的警告对话框实现</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">closeEvent</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">:</span> QtGui<span class="token punctuation">.</span>QCloseEvent<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>    ok <span class="token operator">=</span> QtWidgets<span class="token punctuation">.</span>QPushButton<span class="token punctuation">(</span><span class="token punctuation">)</span>    ok<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">u'确定'</span><span class="token punctuation">)</span>    cancel <span class="token operator">=</span> QtWidgets<span class="token punctuation">.</span>QPushButton<span class="token punctuation">(</span><span class="token punctuation">)</span>    cancel<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">u'取消'</span><span class="token punctuation">)</span>    msg <span class="token operator">=</span> QtWidgets<span class="token punctuation">.</span>QMessageBox<span class="token punctuation">(</span>QtWidgets<span class="token punctuation">.</span>QMessageBox<span class="token punctuation">.</span>Warning<span class="token punctuation">,</span> <span class="token string">u'关闭'</span><span class="token punctuation">,</span> <span class="token string">u'是否关闭？'</span><span class="token punctuation">)</span>    msg<span class="token punctuation">.</span>addButton<span class="token punctuation">(</span>ok<span class="token punctuation">,</span> QtWidgets<span class="token punctuation">.</span>QMessageBox<span class="token punctuation">.</span>ActionRole<span class="token punctuation">)</span>    msg<span class="token punctuation">.</span>addButton<span class="token punctuation">(</span>cancel<span class="token punctuation">,</span> QtWidgets<span class="token punctuation">.</span>QMessageBox<span class="token punctuation">.</span>RejectRole<span class="token punctuation">)</span>    <span class="token keyword">if</span> msg<span class="token punctuation">.</span>exec_<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> QtWidgets<span class="token punctuation">.</span>QMessageBox<span class="token punctuation">.</span>RejectRole<span class="token punctuation">:</span>        event<span class="token punctuation">.</span>ignore<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        event<span class="token punctuation">.</span>accept<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>QLabel（里面显示图片）自适应窗口大小</p></li></ol><pre class="line-numbers language-python" data-language="python"><code class="language-python">self<span class="token punctuation">.</span>label_show_video<span class="token punctuation">.</span>setAutoFillBackground<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PyQt5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode刷题记录</title>
      <link href="/2023/03/02/leetcode-shua-ti-ji-lu/"/>
      <url>/2023/03/02/leetcode-shua-ti-ji-lu/</url>
      
        <content type="html"><![CDATA[<h1 id="2023"><a href="#2023" class="headerlink" title="2023"></a>2023</h1><h2 id="2023-03"><a href="#2023-03" class="headerlink" title="2023.03"></a>2023.03</h2><h3 id="0301"><a href="#0301" class="headerlink" title="0301"></a>0301</h3><h4 id="LC287-寻找重复数"><a href="#LC287-寻找重复数" class="headerlink" title="LC287 寻找重复数"></a>LC287 寻找重复数</h4><p>问题的转化值得学习，只不过评论区称之为“奇淫技巧”。<br>好神奇居然刷到了这道题，所以为什么二分模板行不通呢？</p><h4 id="LC2373-矩阵中的局部最大值"><a href="#LC2373-矩阵中的局部最大值" class="headerlink" title="LC2373 矩阵中的局部最大值"></a>LC2373 矩阵中的局部最大值</h4><p>本质上是在实现最大池化。<strong>数组的申请与初始化值得学习</strong>，只不过自己把四层循环写错了，短时间内也没意识到哪里错了，回头再看。<br>。。。。。。。无语了，<strong>命名冲突</strong>，使用了两个n。。。。。。</p><h3 id="0302"><a href="#0302" class="headerlink" title="0302"></a>0302</h3><h4 id="LC面试题05-02"><a href="#LC面试题05-02" class="headerlink" title="LC面试题05.02"></a>LC面试题05.02</h4><p>二进制小数转十进制小数规则记一下。</p>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>202303</title>
      <link href="/2023/03/01/202303/"/>
      <url>/2023/03/01/202303/</url>
      
        <content type="html"><![CDATA[<h1 id="section">2023.03</h1><h2 id="not-plans-but-records-just-records.">Not Plans, but Records, just Records.</h2><h2 id="记得每天看ddls">记得每天看DDLs</h2><h3 id="activity-inventoryrecords">Activity Inventory&amp;Records</h3><table><thead><tr class="header"><th>Date</th><th>TaskID</th><th>Description</th><th>Details</th><th>So？Done？</th></tr></thead><tbody><tr class="odd"><td>2023.03.01</td><td>01</td><td>决定开始记录这个东西</td><td></td><td>Just do it！</td></tr><tr class="even"><td></td><td>02</td><td>LC287；LC2373</td><td>二分;遍历实现最大池化</td><td>详见《LeetCode刷题记录》</td></tr><tr class="odd"><td></td><td>03</td><td>河工大Pytorch</td><td>Visdom；</td><td>详见《河工大Pytorch深度学习实践》</td></tr><tr class="even"><td></td><td>04</td><td>读论文</td><td>ECCV2022 MOTR</td><td>大体看完，剩下消融实验和不足</td></tr><tr class="odd"><td>2023.03.02</td><td>01</td><td>LC面试题05.02</td><td>二进制小数转十进制小数</td><td>除法</td></tr><tr class="even"><td></td><td>02</td><td>组会PPT</td><td>MOTR</td><td>PPT大致好了，没写稿子</td></tr><tr class="odd"><td></td><td>03</td><td>读论文</td><td>ICLR2021 ViT</td><td></td></tr><tr class="even"><td>2023.03.03</td><td>01</td><td>LC1487</td><td>字典的value当做计数器</td><td>标明中等题，还可以</td></tr><tr class="odd"><td></td><td>02</td><td>读论文</td><td>Transformer in Transformer</td><td></td></tr><tr class="even"><td>2023.03.04</td><td>01</td><td>LC982</td><td>判断列表里三个数的位与远算为零</td><td>先进行两个数的运算</td></tr><tr class="odd"><td>2023.03.05</td><td>01</td><td>LC1599</td><td>经营摩天轮的最大利润</td><td></td></tr><tr class="even"><td></td><td>02</td><td>装虚拟机</td><td>VMware；FinalShell（WinPcap）；</td><td></td></tr><tr class="odd"><td>2023.03.06</td><td>01</td><td>LC1653</td><td>使字符串平衡的最少删除次数</td><td>思想</td></tr><tr class="even"><td>2023.03.07</td><td>01</td><td>LC1096</td><td>中缀表达式</td><td>不会</td></tr><tr class="odd"><td>2023.03.08</td><td>01</td><td>剑指offer47</td><td>礼物的最大价值</td><td>动态规划</td></tr><tr class="even"><td></td><td>02</td><td>DL基础知识</td><td>上采样下采样</td><td></td></tr><tr class="odd"><td>2023.03.09</td><td>01</td><td>LC2379</td><td>滑动窗口</td><td></td></tr><tr class="even"><td>2023.03.10</td><td>01</td><td>LC1590</td><td>使数组和能被p整除</td><td>前缀和；copy</td></tr><tr class="odd"><td></td><td>02</td><td>黑马Linux</td><td>第二三四章</td><td></td></tr></tbody></table><h2 id="ddls">DDLs</h2>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo写作经验积累</title>
      <link href="/2022/11/25/hexo-xie-zuo-jing-yan-ji-lei/"/>
      <url>/2022/11/25/hexo-xie-zuo-jing-yan-ji-lei/</url>
      
        <content type="html"><![CDATA[<p><a href="https://hexo.io/zh-cn/docs/writing">Hexo官方文档</a></p><h2 id="布局layout">1. 布局（Layout）</h2><h3 id="三种布局及简单使用">1.1 三种布局及简单使用</h3><p>Hexo有三种默认布局：post、page和draft。在创建三种不同类型文件时，会被分别保存在不同路径下。</p><table><thead><tr class="header"><th style="text-align: center;">布局</th><th style="text-align: center;">路径</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">post</td><td style="text-align: center;">source/_posts</td></tr><tr class="even"><td style="text-align: center;">page</td><td style="text-align: center;">source</td></tr><tr class="odd"><td style="text-align: center;">draft</td><td style="text-align: center;">source/_drafts</td></tr></tbody></table><p>可通过执行下列命令创建新的文章或页面：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new <span class="token punctuation">[</span>layout<span class="token punctuation">]</span> <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>不指定[layout]会默认使用_config.yml中的default_layout参数所指定的默认布局。</p><p>另外草稿（draft）不会显示在页面中，可以执行时加上--draft参数，或是把render_drafts参数设为true来预览草稿。 可以通过publish命令将草稿移动到source/_posts文件夹</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo publish <span class="token punctuation">[</span>layout<span class="token punctuation">]</span> <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="布局配置修改">1.2 布局配置修改</h3><p>scaffolds目录下有若干md文件，分别对应各种布局的默认front-matter</p><h3 id="建立自定义布局模板scaffold">1.3 建立自定义布局（模板Scaffold）</h3><h2 id="访问密码hexo-blog-encrypt">2. 访问密码（hexo-blog-encrypt）</h2><p><a href="https://easyhexo.com/3-Plugins-use-and-config/3-4-hexo-blog-encrypt/"></a></p><ul><li><code>npm install --save hexo-blog-encrypt</code></li></ul><p>另外需要将matery主题目录下_config.yml文件的verifyPassword选项取消激活，改为false。</p><h2 id="公式">3 公式</h2><p>Hexo支持Latex风格的公式编辑</p><p>https://seekstar.github.io/2021/11/16/hexo%E6%94%AF%E6%8C%81latex%E9%A3%8E%E6%A0%BC%E7%9A%84%E5%85%AC%E5%BC%8F%E7%BC%96%E8%BE%91/</p>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阅读论文积累词汇</title>
      <link href="/2022/11/24/yue-du-lun-wen-ji-lei-ci-hui/"/>
      <url>/2022/11/24/yue-du-lun-wen-ji-lei-ci-hui/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="907b7af344db612abe5e9b202d38a9d32a54ccb6e4161c19b926c9330392cae6">b567c004ca2bb5b08891a8e064d889d495465a3ef330030560608dcbde6611978e240c580528511397691cad1de9048ac2b82f92babe80764a7aedbc7a97188b5683846925e47ae396e4ba8bf2f66f3481b9da14c96beb92a98a5e571acb138753dd49b58ab860b3ab1194d481a14ecb64f4cee12c7acd5fa028a18b51ba8b802a9fe442e4faba91243120b407dd27e0ceca9857c9ce57f73313e2f5c02df79b48b30d97622f84d1bf4b864622e59774555771ab5608ffb82d13e53a6b7541aefc6577c5c8a5fb927bdeeed0cb7924362ecf641fa00260cd7f9253406861e9001ea1e1a536d8b96589dd82f50da5d0398d262b5f625c995eabef0692bb7860dc9aaee97d24eddcf0fc23cbdc7293671e888f87e9f89ef5aa46a1cc56241c25a5669ddd485dfc1c4ee51a7a73ee8d0ca6a344df25ca5346bb0ba11d455db3c4016644f46e20a606f36796fa74bf3bae28612668fc3e24130f1a6b5901d49fc6f00baab72119c9cb79b9f81967e65dc83fb979fa3fa5c7bf0ed46673dec250ddad17b2645de8e850d8f514085da815fb2a12fe784cc2ad6ab178be9c7a1fd869e1bd2d97540c7049a1d53b08d932b9549798457ce7f218e8248eb2ac2639b51665af2567325e398831f857284826fe51b77b7e851b10b80d4710b5cc19bf12fc40028abe2ce85d12f3bf6e44ee44ff1c38888bc7e1fa805b4539b7d4ce5f094c5f71958181371223a9efcdee5328b1b6901792db64192fc7ecfe9d8ae53f7e5089306efd9799b5e4c1ee985362b25cd99f2ff21da3559b936f855613144f061498c9c861618545dced443c1c4fdd20ad2f2ef6867b27a03352eda038dae315d94ba67749a712a977ea280ea9b91f9448fd6e06afc54e500f6c40a7f6ded6afda6d82bc1a6049aa9aa61513a1cdd0bb7754ccde97653a89db5d70753da635e0fd406ca6ca17b5989811957c717345dc416b373d523e9295162d76770a53c11143d8cf23deef52c8e5c02c992bb6508ba8357b94bc7281ed6b6122b3544467958ae9639b514fe791a89fed145b83801d7b32e74440442048d3ee1ca35dd9eb2692584ca3324977e34404ad481b6dfc35712de7d2f86094cb4b6f282c35e48e5a7ffcb5be2dd5b16117c5c860191f0d5ecb3f0fbff1f8e2b48ff66b08294e0f9cbce4</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">You must enter the password to read.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Paper </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Typora使用经验积累</title>
      <link href="/2022/11/23/typora-shi-yong-jing-yan-ji-lei/"/>
      <url>/2022/11/23/typora-shi-yong-jing-yan-ji-lei/</url>
      
        <content type="html"><![CDATA[<h1 id="1-代码块"><a href="#1-代码块" class="headerlink" title="1. 代码块"></a>1. 代码块</h1><p>连续输入三个‘~’再输入想使用的语言，代码块建成之后也可在右下角手动修改所用语言。</p><h1 id="2-MathType公式复制到Typora"><a href="#2-MathType公式复制到Typora" class="headerlink" title="2. MathType公式复制到Typora"></a>2. MathType公式复制到Typora</h1><ol><li><p>在MathType打好公式并复制，需在MathType中将复制格式修改为PlainTex</p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20221123153510409.png" alt="image-20221123153510409"></p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20221123153127939.png" alt="image-20221123153127939"></p></li><li><p>粘贴到MathType会这样显示：<br><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20221123154440805.png" alt="image-20221123154440805"><br>Typora不会将粘贴过来的$$识别为公式栏，需手动输入$$并按回车创建公式栏</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20221123154657476.png" alt="image-20221123154657476"><br>然后将复制过来的文本删除两端的$$粘贴到公式栏<br><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20221123154805596.png" alt="image-20221123154805596"></p><h1 id="3-条件概率"><a href="#3-条件概率" class="headerlink" title="3. 条件概率"></a>3. 条件概率</h1><p>菜单栏：编辑-&gt;插入符号</p><h1 id="4-与Hexo的小冲突"><a href="#4-与Hexo的小冲突" class="headerlink" title="4. 与Hexo的小冲突"></a>4. 与Hexo的小冲突</h1><p>写公式时可能会出现’{ {‘的字符串，会报错</p><p><img src="C:\Users\23509\AppData\Roaming\Typora\typora-user-images\image-20221123161536878.png" alt="image-20221123161536878"></p><p><a href="https://so.csdn.net/so/search?q=hexo&amp;spm=1001.2101.3001.7020">hexo</a> 的文章渲染使用的是 <code>Nunjucks</code> ，因为在使用<code>mathjax</code>公式，造成了<code>{ {</code>重叠，而它会在生成文章时将那几个大括号识别成自己的语法，这样就会报错。</p><p>用空格隔开就好；</p>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MathType书写公式经验记录</title>
      <link href="/2022/11/23/mathtype-shu-xie-gong-shi-jing-yan-ji-lu/"/>
      <url>/2022/11/23/mathtype-shu-xie-gong-shi-jing-yan-ji-lu/</url>
      
        <content type="html"><![CDATA[<h3 id="1-中-英文状态下输入"><a href="#1-中-英文状态下输入" class="headerlink" title="1 中/英文状态下输入"></a>1 中/英文状态下输入</h3><p>中文状态下输入字母不是斜体的，书写公式时建议切换输入法至英文状态。</p><h3 id="2-常用快捷键"><a href="#2-常用快捷键" class="headerlink" title="2 常用快捷键"></a>2 常用快捷键</h3><h4 id="2-1-最常用（Ctrl-字母）"><a href="#2-1-最常用（Ctrl-字母）" class="headerlink" title="2.1 最常用（Ctrl+字母）"></a>2.1 最常用（Ctrl+字母）</h4><p>Tab跳格<br>[Ctrl+H]上标    [Ctrl+L]下标    [Ctrl+J]上下标<br>[Ctrl+9/0]小括号()    [Ctrl+[ ]中括号[]    [Ctrl+shift+[ ]大括号{}        注：ctrl快捷键输出的括号和通常使用shift输出的括号是不一样的。<br>[Ctrl+R]根号radical    [CTRL+F]分式fractional    [Ctrl+/]斜杠分式</p><h4 id="2-2-次常用（前缀键，字母）"><a href="#2-2-次常用（前缀键，字母）" class="headerlink" title="2.2 次常用（前缀键，字母）"></a>2.2 次常用（前缀键，字母）</h4><h4 id="2-3-希腊字母的快捷键（Ctrl-G，字母）"><a href="#2-3-希腊字母的快捷键（Ctrl-G，字母）" class="headerlink" title="2.3 希腊字母的快捷键（Ctrl+G，字母）"></a>2.3 希腊字母的快捷键（Ctrl+G，字母）</h4><h3 id="3-花体字母"><a href="#3-花体字母" class="headerlink" title="3 花体字母"></a>3 花体字母</h3><p>选中输入字母后更换字体为Euclid Math One</p><p>Plain Text可能不支持该字体，在剪切和复制首选项中设置成AMSLaTex</p><h3 id="4-公式复制后不能粘贴"><a href="#4-公式复制后不能粘贴" class="headerlink" title="4 公式复制后不能粘贴"></a>4 公式复制后不能粘贴</h3><p>需要在MathType中进行设置</p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/f51f174aca074f2c9698a07320c82c0f.png" alt="剪切和复制首选项设置"></p>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MathType </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>白板推导1-1 绪论</title>
      <link href="/2022/11/23/bai-ban-tui-dao-1-1-xu-lun/"/>
      <url>/2022/11/23/bai-ban-tui-dao-1-1-xu-lun/</url>
      
        <content type="html"><![CDATA[<p>对概率的诠释有两大学派：频率派和贝叶斯派。</p><p>后续对观测集采用下面记号：<br>$$<br>{X_{N \times p}} = {\left( { {x_1},{x_2}, \cdots ,{x_N}} \right)^T},{x_i} = {\left( { {x_{i1}},{x_{i2}}, \cdots ,{x_{ip}}} \right)^T}<br>$$<br>这个记号表示有N个样本，每个样本都是p维向量。其中每个观测都是由p(x|θ)生成的。</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 白板推导 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Difference between working directory and local repository</title>
      <link href="/2022/11/23/difference-between-working-directory-and-local-repository/"/>
      <url>/2022/11/23/difference-between-working-directory-and-local-repository/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20221123093910760.png" alt="image-20221123093910760"></p><p><strong>working directory（workspace）</strong>：workspace = working directory = project folder，其实就是本地电脑里的文件<br><strong>repository</strong>：实际上就是working directory里的.git隐藏文件夹</p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20221123093045549.png" alt="image-20221123093045549"></p><p><strong>Step 1: Creating a working directory/workspace</strong></p><p>在本地<strong>新建文件夹</strong>即可实现</p><p><strong>Step 2: Creating a repository</strong></p><p>git commit可在本地生成一个.git文件夹，实际上就是local repository</p><p><strong>Step 3: The working directory and repository in depth</strong></p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20221123093412241.png" alt="image-20221123093412241"></p><p><strong>Step 4: Adding a file</strong> </p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20221123093458051.png" alt="image-20221123093458051"></p><p>在本地新建example.txt文件，这时只在working directory（本地），还没有被add到repository，不能对其进行版本管理。</p><p><strong>Step 5: Adding the file to our repository</strong> </p><p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20221123093641206.png" alt="image-20221123093641206"></p><p>git add可实现将example.txt从working directory<strong>复制</strong>到local repository，这样example.txt就可以被Git追踪了</p>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git命令解释与踩坑记录</title>
      <link href="/2022/11/22/git-ming-ling-jie-shi-yu-cai-keng-ji-lu/"/>
      <url>/2022/11/22/git-ming-ling-jie-shi-yu-cai-keng-ji-lu/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/Junkman996/FigureBed/img/image-20221122200729751.png"></p><h2 id="1-删除remote-repository的某个文件"><a href="#1-删除remote-repository的某个文件" class="headerlink" title="1. 删除remote repository的某个文件"></a>1. 删除remote repository的某个文件</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">rm</span> test.txt<span class="token comment">#在实践中，该命令将workspace和local repository中的文件都删除了</span><span class="token comment">##然后commit+push</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode135：分发糖果</title>
      <link href="/2022/11/13/leetcode135-fen-fa-tang-guo/"/>
      <url>/2022/11/13/leetcode135-fen-fa-tang-guo/</url>
      
        <content type="html"><![CDATA[<p>规则定义：设学生 A 和学生 B 左右相邻，A 在 B 左边；<br>        左规则：当rating<del>B</del> &gt; rating<del>A</del>时，B的糖果比A的糖果数量多。<br>        右规则：当rating<del>A</del> &gt; rating<del>B</del>时，A的糖果比B的糖果数量多。</p><p>相邻的学生中，评分高的学生必须获得更多的糖果 <strong>等价于</strong> 所有学生满足左规则且满足右规则。</p><p>算法流程：</p><ol><li>先从左至右遍历学生成绩 ratings，按照以下规则给糖，并记录在 left 中：<ol><li>先给所有学生 1 颗糖；</li><li>若ratings<del>i</del> &gt; ratings<del>i-1</del>，则第i名学生的糖比第i-1名学生多1颗；</li><li>若ratings<del>i</del> &lt;= ratings<del>i-1</del>，则第 i 名学生糖数量不变。（交由从右向左遍历时处理。）<br>经过此规则分配后，可以保证所有学生糖数量 满足左规则 。同理，在此规则下从右至左遍历学生成绩并记录在 right 中，可以保证所有学生糖数量<strong>满足左规则</strong>。</li></ol></li><li>同理，在此规则下从右至左遍历学生成绩并将糖果数记录在right中，可保证所有学生糖数量<strong>满足右规则</strong></li><li>最终，取以上2轮遍历left和right对应学生糖果数的最大值 ，这样则<strong>同时满足左规则和右规则</strong>，即得到每个同学的最少糖果数量。</li></ol><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">//开两个数组，好理解int candy(vector&lt;int&gt;&amp; ratings) {int len = ratings.size();if(len&lt;2){            return len; //长度即为总糖果数        }vector&lt;int&gt; left(len, 1);    //每个学生最少分配1个糖果vector&lt;int&gt; right(len, 1);    for(int i=0; i&lt;len-1; i++){if(ratings[i+1] &gt; ratings[i]){left[i+1] = left[i]+1;}}for(int i=len-1; i&gt;0; i--){if(ratings[i-1] &gt; ratings[i]){right[i-1] = right[i]+1;}}    int total = 0;for(int i=0; i&lt;len; i++){total += max(left[i], right[i]);}return total;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">//开一个数组int candy(vector&lt;int&gt;&amp; ratings) {    int length = ratings.size();    if(length&lt;2){        return length;    }    vector&lt;int&gt; num(length, 1);    for(int i=0; i&lt;length-1; i++){        if(ratings[i+1]&gt; ratings[i]){            num[i+1] = num[i]+1;        }    }    for(int i=length-1; i&gt;0; i--){        if(ratings[i-1] &gt; ratings[i]){            num[i-1] = max(num[i-1] ,num[i]+1);        }    }    return accumulate(num.begin(), num.end(), 0);}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
